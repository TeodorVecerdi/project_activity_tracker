<!DOCTYPE html>
<html lang="en">
<head>
    <% include ../partials/head.ejs %>
    <link rel="stylesheet" href="/stylesheets/todo.css">
</head>
<body class="bg-dark-blue">
<% include ../partials/navbar.ejs %>

<div class="container">
    <div class="row text-light mt-3 align-items-center">
        <div class="col-6 col-lg-3 text-end">Selected project:</div>
        <div class="col-6 col-lg-2 fw-bold text-primary" id="selectedProject"></div>
        <div class="mt-3 mt-lg-0 col-12 col-lg-7">
            <select aria-label="Select project" class="form-select bg-dark text-light border-primary"
                    name="selectProject" id="selectProject"></select>
        </div>
    </div>

    <form class="flex-row-reverse row mt-2" id="add-todo-item-form" method="post">
        <div class="col-lg-7 col-12 mt-1">
            <div class="bg-dark">
                <input type="text" class="form-control bg-dark text-light border-primary" id="todoItem"
                       name="todoItem" placeholder="Add todo entry">
            </div>
        </div>
    </form>
    <div id="todoEditor-container" class="yeet" title="Close"></div>
    <div id="todoEditor" class="yeet">
        <div class="fs-2 text-white ms-3 mt-2">Edit Todo</div>
        <button id="closeEditor" class="position-absolute btn align-content-center"><i class="fa fa-times"></i>
        </button>

        <div class="px-4 mt-4 row justify-content-start">
            <div class="col-12">
                <input id="todoEditor-titleInput" aria-label="Todo title" class="bg-dark text-light" type="text"
                       placeholder="Title">
            </div>
            <div class="col-12 vh-55">
                <textarea id="todoEditor-descriptionInput" aria-label="Todo description" class="bg-dark text-light"
                          type="text" placeholder="Description"></textarea>
            </div>
        </div>
    </div>
    <div id="todosContainer" class="row mt-5"></div>
</div>

<% include ../partials/footer.ejs %>

<script src="/javascripts/utils.js"></script>
<script>
    let projectMap = {};
    let activeProject = undefined;
    let selectInput = $('#selectProject');
    let selectedProjectText = $('#selectedProject');


    $(() => {
        $('#closeEditor, #todoEditor-container').on('click', () =>  {
            $('#todoEditor').addClass('yeet');
            $('#todoEditor-container').addClass('yeet');
        });

        $('#add-todo-item-form').on('submit', (evt) => {
            evt.preventDefault();
            let formData = $('#add-todo-item-form').serialize();
            $.ajax({
                url: '/todo/add-todo',
                type: 'post',
                data: formData,
                success: () => {
                    $('#add-todo-item-form').trigger('reset');
                    refreshTodos();
                }
            });
        });

        refreshProjects(() => {
            refreshTodos({makeDirty: true});
        });


        selectInput.on('change', function () {
            activeProject = this.value;
            $.ajax({
                url: '/project/select-project',
                type: 'put',
                data: {id: this.value},
                success: () => {
                    refreshProjects(() => {
                        refreshTodos({makeDirty: true});
                    });
                }
            });
        });
    });

    function refreshProjects(callback) {
        $.ajax({
            url: '/project/get',
            type: 'get',
            success: data => {
                onLoadProjects(data, callback);
            },
            error: err => {
                console.error(err);
            }
        });
    }

    function refreshTodos(options = {}, callback) {
        let todosContainer = $('#todosContainer');

        if (activeProject === undefined) {
            todosContainer.html(`<span class="h2 col-12 text-center text-secondary">No project selected</span>`)
        } else {
            $.ajax({
                url: '/todo/get-todos',
                type: 'get',
                data: options,
                success: data => {
                    onLoadTodos(data, callback)
                },
                error: err => {
                    console.error(err);
                }
            });
        }
    }

    function onLoadTodos(data, callback) {
        let todosContainer = $('#todosContainer');
        todosContainer.html("");

        let todos = data.todos;
        let notCompleted = '';
        todos.forEach(todo => {
            let isDone = todo.done;
            if (isDone == true) return;
            let priority = parseInt(todo.priority);
            let type = parseInt(todo.type);
            notCompleted += `
<div class="justify-content-around row mb-md-2 mb-4 pb-3 pb-md-0" id="todo-${todo.id}" data-todo-id="${todo.id}" data-todo-priority="${priority}" data-todo-type="${type}" data-todo-done="${isDone}">
<div class="d-flex flex-row flex-grow-1 justify-content-center align-self-center col-12 col-md-2">
<button type="button" class="btn btn-floating br-0 shadow-none bg-transparent changePriority" title="${priority === 0 ? 'Priority: Low' : priority === 1 ? 'Priority: Normal' : 'Priority: High'}">
<i class="fas ${priority === 0 ? 'fa-caret-down fa-2x text-success' : priority === 1 ? 'fa-window-minimize fa-lg text-grey' : 'fa-caret-up fa-2x text-danger'}" style="${priority === 1 ? 'transform: translateY(-0.4rem)' : ''}"></i></button>
<button type="button" class="btn btn-floating br-0 shadow-none bg-transparent changeType" title="${type === 0 ? 'Feature' : 'Bug'}">
<i class="${type === 0 ? 'far fa-lightbulb text-warning' : 'fas fa-bug text-secondary'}"></i></button>
<button type="button" class="btn btn-success btn-floating shadow-1-strong changeTodo" title="Mark as completed">
<i class="fas fa-check"></i></button>
</div>
<div class="flex-grow-1 col-12 col-md-9 align-self-center">
<div class="fs-5 text-center text-md-start text-shadow text-grey"><i class="fas fa-pen text-white p-2 me-2 todo-link"></i>${todo.text}</div>
</div>
<button type="button" class="align-self-center col-12 col-md-1 mx-1 mt-2 mt-md-0 btn btn-primary btn-floating removeTodo" title="Remove">
<i class="fas fa-trash-alt"></i></button>
</div>`;
        });

        let completed = '';
        todos.forEach(todo => {
            let isDone = todo.done;
            if (isDone == false) return;
            let priority = parseInt(todo.priority);
            let type = parseInt(todo.type);
            completed += `
<div class="justify-content-around row mb-md-2 mb-4 pb-3 pb-md-0" id="todo-${todo.id}" data-todo-id="${todo.id}" data-todo-priority="${priority}" data-todo-type="${type}" data-todo-done="${isDone}">
<div class="d-flex flex-row flex-grow-1 justify-content-center align-self-center col-12 col-md-2">
<button type="button" class="btn btn-floating br-0 shadow-none bg-transparent changePriority" title="${priority === 0 ? 'Priority: Low' : priority === 1 ? 'Priority: Normal' : 'Priority: High'}">
<i class="fas ${priority === 0 ? 'fa-caret-down fa-2x text-success' : priority === 1 ? 'fa-window-minimize fa-lg text-grey' : 'fa-caret-up fa-2x text-danger'}" style="${priority === 1 ? 'transform: translateY(-0.4rem)' : ''}"></i></button>
<button type="button" class="btn btn-floating br-0 shadow-none bg-transparent changeType" title="${type === 0 ? 'Feature' : 'Bug'}">
<i class="${type === 0 ? 'far fa-lightbulb text-warning' : 'fas fa-bug text-secondary'}"></i></button>
<button type="button" class="btn btn-secondary btn-floating changeTodo" title="Mark not as completed">
<i class="fas fa-times"></i></button>
</div>
<div class="flex-grow-1 col-12 col-md-9 align-self-center">
<div class="fs-5 text-center text-md-start text-shadow text-grey"><i class="fas fa-pen text-white p-2 me-2 todo-link"></i>${todo.text}</div>
</div>
<button type="button" class="align-self-center col-12 col-md-1 mx-1 mt-2 mt-md-0 btn btn-primary btn-floating removeTodo" title="Remove">
<i class="fas fa-trash-alt"></i></button>
</div>`;
        });
        if (notCompleted != '') notCompleted = `<h2 class="text-center text-primary mb-2">Not Completed</h2><hr class="text-white mb-2"/><div class="noScrollbar" style="max-height: ${completed == '' ? -1 : 72}vh !important; overflow-y: auto">` + notCompleted + "</div>";
        if (completed != '') completed = `<h2 class="text-center text-primary${notCompleted != '' ? ' mt-3' : ''}">Completed</h2><hr class="text-white mb-2"/><div class="noScrollbar" style="max-height: ${notCompleted == '' ? -1 : 72}vh !important; overflow-y: auto">` + completed + "</div>";
        let todoEntries = notCompleted + completed;

        todosContainer.html(todoEntries);

        $('.removeTodo').on('click', (event) => {
            let todoId = $(event.currentTarget).parent().data('todo-id');
            $.ajax({
                url: '/todo/remove-todo',
                type: 'delete',
                data: {id: todoId},
                success: () => {
                    refreshTodos();
                }
            });
        });

        $('.changeTodo').on('click', (event) => {
            let todoId = $(event.currentTarget).parent().parent().data('todo-id');
            let todoDone = $(event.currentTarget).parent().parent().data('todo-done') == "1";
            $.ajax({
                url: '/todo/update-todo',
                type: 'patch',
                data: {id: todoId, status: !todoDone},
                success: () => {
                    refreshTodos();
                }
            });
        });

        $('.changePriority').on('click', (event) => {
            let todoId = $(event.currentTarget).parent().parent().data('todo-id');
            let todoPriority = parseInt($(event.currentTarget).parent().parent().data('todo-priority'));
            let newPriority = (todoPriority + 1) % 3;
            $.ajax({
                url: '/todo/update-todo-priority',
                type: 'patch',
                data: {id: todoId, priority: newPriority},
                success: () => {
                    refreshTodos();
                }
            });
        });

        $('.changeType').on('click', (event) => {
            let todoId = $(event.currentTarget).parent().parent().data('todo-id');
            let todoType = parseInt($(event.currentTarget).parent().parent().data('todo-type'));
            let newType = (todoType + 1) % 2;
            $.ajax({
                url: '/todo/update-todo-type',
                type: 'patch',
                data: {id: todoId, type: newType},
                success: () => {
                    refreshTodos();
                }
            });
        });

        $('.todo-link').on('click', () => {
            $('#todoEditor').removeClass('yeet');
            $('#todoEditor-container').removeClass('yeet');
        })

        if (callback) callback();
    }

    function onLoadProjects(data, callback) {
        // reset
        projectMap = {};
        selectInput.html("");

        selectInput.append(`<option value='' ${data.selectedProject === undefined ? 'selected' : ''} disabled>Select a project</option>`);
        data.projects.forEach(project => {
            projectMap[project.id] = project;
            selectInput.append(`<option value='${project.id}' ${data.selectedProject == project.id ? 'selected' : ''}>${project.name}</option>`)

            if (data.selectedProject == project.id)
                activeProject = project.id;
        });

        if (projectMap.hasOwnProperty(data.selectedProject)) {
            selectedProjectText.text(projectMap[data.selectedProject].name);
        } else selectedProjectText.text("None");

        if (callback) callback();
    }
</script>
</body>
</html>
