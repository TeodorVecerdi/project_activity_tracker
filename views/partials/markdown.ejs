<script src="https://cdn.jsdelivr.net/npm/dompurify@2/dist/purify.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/marked/marked.min.js"></script>
<script src="https://cdn.jsdelivr.net/gh/highlightjs/cdn-release@10.5.0/build/highlight.min.js"></script>
<script src="https://cdn.jsdelivr.net/gh/highlightjs/cdn-release@10.5.0/build/languages/glsl.min.js"></script>
<script>
    marked.setOptions({
        highlight: (code, language) => {
            const validLanguage = hljs.getLanguage(language) ? language : 'plaintext';
            let highlighted = hljs.highlightAuto(code);
            let auto = true;
            if (hljs.getLanguage(language)) {
                highlighted = hljs.highlight(validLanguage, code);
                auto = false;
            }

            let internalLanguage = hljs.getLanguage(highlighted.language).name;
            return `<div class="code-block"><div class="lang-preview">${internalLanguage}${auto ? ' (auto-detected)': ''}</div><div class="code">${highlighted.value}</div></div>`;
        },
        smartLists: true,
        xhtml: true
    });

    hljs.initHighlighting();

    function renderMarkdown(markdown, parseInline) {
        if(parseInline) return DOMPurify.sanitize(marked.parseInline(markdown));
        return DOMPurify.sanitize(marked(markdown));
    }
</script>